linux-wpan
==========
Mailinglist

<linux-wpan@vger.kernel.org>
http://www.spinics.net/lists/linux-wpan[Mailinglist-Archive]

.IRC
#linux-wpan on irc.freenode.net

wpan-tools
----------

To access the nl802154 netlink inteface and also for checking
the network connectivity you will need the wpan-tools.

Dependencies:

- netlink library http://www.infradead.org/~tgr/libnl/[libnl].

These tools contains:

[horizontal]
*iwpan*:: based on the wireless http://wireless.kernel.org/en/users/Documentation/iw[iw] tool.
*wpan-ping*:: Ping utility on IEEE 802.15.4 level.

Download
~~~~~~~~
For the last release check out http://wpan.cakelab.org/releases/[releases] page:

http://wpan.cakelab.org/releases/

Supported Hardware
------------------

.Supported 802.15.4 Hardware
[cols="3,4,2,^2,12",options="header"]
|=============================================================
|Transceiver |Supported        |Driver     | Bus |Where to buy
|adf7242     |yes | adf7242 | SPI or PMOD | http://www.analog.com/en/products/rf-microwave/integrated-transceivers-transmitters-receivers/low-power-rf-transceivers/adf7242.html#product-samplebuy[Analog]
|at86rf212   |yes              |at86rf230  | SPI | http://de.aliexpress.com/item/Wireless-transceiver-module-zigbee-module-belt-at86rf212-mcu-chip-780m-module/1757611944.html[aliexpress]
|at86rf212b  |yes              |at86rf230  | SPI | http://www.digikey.com/product-search/en?x=0&y=0&lang=en&site=us&keywords=ATZB-212B-XPRO[digikey]
|at86rf230   |no               |at86rf230? | SPI |
|at86rf231   |yes              |at86rf230  | SPI | http://downloads.qi-hardware.com/people/werner/wpan/web/[atben] Out of stock. Mailto linux-wpan and Werner to produce maybe new ones. Or contact http://en.qi-hardware.com/wiki/Main_Page[qi-hardware].
|at86rf233   |yes              |at86rf230  | SPI | http://openlabs.co/store/Raspberry-Pi-802.15.4-radio[openlabs], http://www.digikey.com/product-search/en?x=0&y=0&lang=en&site=us&keywords=ATREB233-XPRO[digikey]
|atusb       |yes              |atusb      | USB | http://downloads.qi-hardware.com/people/werner/wpan/web/[atusb] Out of stock. Mailto linux-wpan and Werner to produce maybe new ones. Or contact http://en.qi-hardware.com/wiki/Main_Page[qi-hardware].
|cc2420      |no               |           | SPI | http://de.aliexpress.com/store/product/ZIGBEE-networking-technology-Wi-Fi-CC2420-wireless-transceiver-modules-including-antenna/1383438_2036388706.html[aliexpress]
|cc2520      |yes              |cc2520     | SPI | http://de.aliexpress.com/item/CC2520-wireless-module-ZIGBEE-wireless-sensor-networking-module-with-SMA-external-antenna/1921436550.html[aliexpress]
|cc2531      |no               |           | USB | http://de.aliexpress.com/item/free-shipping-FOR-ZigBee-CC2531-USB-dongle-protocol-analysis-port-capture-wireless-keyboard-and-mouse/32270975591.html[aliexpress]
 |mrf24j40   |yes              |mrf24j40   | SPI |  http://de.aliexpress.com/item/MRF24J40MA-I-RM-MRF24J40MA-I-MRF24J40MA-MRF24J40-MICROC-QFN-Import-original/32223258627.html[aliexpress]
|RZUSBstick  |experimental, http://wpan.cakelab.org/firmwares/rzusb.bin[WIP]          |atusb      | USB | http://www.element14.com/community/docs/DOC-67532/l/avr-rz-usb-stick-module[element14]
|Xbee        |no |https://github.com/joaopedrotaveira/linux-rpl/blob/master/mainline-3.12.y/0001-Added-XBee-driver-support.patch[out of tree]| ?? | https://www.sparkfun.com/pages/xbee_guide[sparkfun]
|=============================================================

How-To's
--------

This section describes various How-To's.
Per default you should have already a node type wpan interface.

////////
af802154
~~~~~~~

////////
6LoWPAN
~~~~~~~

Set some valid pan_id, 802.15.4 default is 0xffff which means not assigned:

---------------------------------------------------------------------
iwpan dev wpan0 set pan_id 0xbeef
---------------------------------------------------------------------

Currently you need to setup the 6LoWPAN interface manually:

---------------------------------------------------------------------
ip link add link wpan0 name lowpan0 type lowpan
---------------------------------------------------------------------

That's it! Now you have some lowpan0 interface with a 6LoWPAN 1280 MTU which runs on top the wpan interface.
As default you have a default link-local address based on the MAC (extended address).

Note: we don't support any case of short-addresses right now. This is a complicated issue with the IPv6 neighbour discovery cache.
Of course we supporting broadcast frames via short-addresses but nothing more in 802.15.4 6LoWPAN.
Only extended address handling is supported right now.


Setup a 6LowPAN test network
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Let's assume you want to setup a 6lowpan test network of six nodes.

---------------------------------------------------------------------
# we need some Private Area Network ID
panid="0xbeef"
# number of nodes
numnodes=6

# include the kernel module for a fake node, tell it to create six
# nodes
modprobe fakelb numlbs=$numnodes

# initialize all the nodes
for i in $(seq 0 $numnodes);
do
	iwpan dev wpan${i} set pan_id 0xbeef
	ip link wpan${i} name lowpan${i} type lowpan
	ip link set wpan${i} up
	ip link set lowpan${i} up
done
---------------------------------------------------------------------

Now let us send some data over our network:

---------------------------------------------------------------------
wireshark -kSl -i lowpan0 &
# get the IPv6 address of lowpan1
lowpan1addr="$(ip addr show lowpan1 | grep inet6 \
	| sed 's,.*inet6 \([^/]*\).*,\1,')"
# tell ping6 to ping the IPv6 address of lowpan1 and send it via
# lowpan0
ping6 ${lowpan1addr}%lowpan0
---------------------------------------------------------------------

Now watch wireshark and all the nice ICMP packets there.


Sniffing
~~~~~~~~

To sniff first remove all wpan interface which sits on top of the wpan phy.
You will get a list of all current running phy interface with:

---------------------------------------------------------------------
iwpan dev
---------------------------------------------------------------------

then delete all interfaces with:

---------------------------------------------------------------------
iwpan dev $IFNAME del
---------------------------------------------------------------------

Finally create a monitor interface:

---------------------------------------------------------------------
iwpan phy phy0 interface add monitor%d type monitor
---------------------------------------------------------------------

Then bring this interface up and run wireshark, tcpdump, etc... on it.
Running a wireshark as sniffing frontend on the $HOST and connect to a $TARGET like Raspberry Pi which have some ethernet ssh connection, you can try:

---------------------------------------------------------------------
ssh root@$TARGET 'tshark -i monitor0 -w -' | wireshark -k -i -
---------------------------------------------------------------------

This will pipe all sniffing frames from $TARGET side to $HOST running wireshark application.
Note you need maybe to change the "$TARGET" and "montior0" to your settings.

//////
Foren6
^^^^^^

//////
Developing
----------

Current developing repository is http://git.kernel.org/cgit/linux/kernel/git/bluetooth/bluetooth-next.git[bluetooth-next].
All patches should be send to <linux-wpan@vger.kernel.org> and based on bluetooth-next.

For wpan-tools checkout the https://github.com/linux-wpan/wpan-tools[wpan-tools] repository. Also send patches to <linux-wpan@vger.kernel.org> for it with a "wpan-tools" tag.
The same for https://github.com/linux-wpan/wpan-misc[wpan-misc].

Open Tasks
~~~~~~~~~~

* There is a lot of missing features for enum definition to some string definition in iwpan which can be lookup in 802.15.4 standard. Words say more than numbers...
** channel/page to frequency
** cca modes/opts
** etc
* Missing features which wireless has and wpan not. Since we based our implementation on wireless we should sync "good patches" from wireless branch.
** Whatever you want and find
* rework
** missing features in nl802154, crypto etc.
** new frame parsing style in mac802154 and ieee802154 based on mac80211 frame parsing design. Draft is https://github.com/linux-wpan/linux-wpan-next/blob/wpan_rework_rfc/net/mac802154/rx.c[mac802154 rx]. Crypto need to be done at first, otherwise I can't test it.
** remove cb context from dev_hard_header and introduce generic header generation functions like https://github.com/linux-wpan/linux-wpan-next/blob/wpan_rework_rfc/net/ieee802154/header_ops.c#L80[header_ops]. Here too, crypto need to be done at first.
* systemd
** add basic functionality for nl802154 and 6lowpan setup in systemd-networkd
* network-manager
* devicetree extended addr setting, draft is here http://www.spinics.net/lists/linux-wpan/msg01503.html[ieee802154: add usual way to get extended address via device tree]
* RPL? - not our job, need to go through ipv6 netdev community, but we should do something to have a "started" mainline solution.
* cleanup/fix 802.15.4 af raw/dgram socket code. We should use bluetooth socket code as example.
* In wireless exists a "station dump", we need something similar "node dump" with all neighbour nodes and their last LQI value, addresses, etc. information.

Rework
~~~~~~

Currently a rework of 802.15.4 subsystem is in progress.

The rework will contains a new netlink API and a general handling about frame creation and parsing.

.Work status
[options="header"]
|=======================================
|Milestone        | Description | state
|1. nl802154      | new netlink framework              | [green]#mostly done#
|2. crypto-layer  | accessable over nl802154 and tools | [red]#TODO#
|3. frame parsing | remove bugs, more generical        | [red]#TODO#
|=======================================

*NOTE* we need to finish rework state 2. before we can start 3 or anything else which touch the frame parsing/generation.

For the nl802154 framework you will need the wpan-tools, older kernels need lowpan-tools but this is not recommended.


Specifications
~~~~~~~~~~~~~~

* http://www.ieee802.org/15/pub/TG4.html[IEEE]:
** http://standards.ieee.org/about/get/802/802.15.html
** 802.15.4-2003
** 802.15.4-2006
** 802.15.4a-2007
** 802.15.4c-2009
** 802.15.4d-2009
** 802.15.4-2011
** 802.15.4e-2012
** 802.15.4f-2012
** 802.15.4g-2012
** 802.15.4j-2013
** 802.15.4k-2013
** 802.15.4m-2014
** 802.15.4p-2014

* https://www.ietf.org/[IETF]:
** http://tools.ietf.org/html/rfc4919[IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs): Overview, Assumptions, Problem Statement, and Goals]
** http://tools.ietf.org/html/rfc4944[Transmission of IPv6 Packets over IEEE 802.15.4 Networks]
** http://tools.ietf.org/html/rfc6282[Compression Format for IPv6 Datagrams over IEEE 802.15.4-Based Networks]
** http://tools.ietf.org/html/rfc6550[RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks]
** http://tools.ietf.org/html/rfc6775[Neighbor Discovery Optimization for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs)]
** http://tools.ietf.org/html/rfc7400[6LoWPAN-GHC: Generic Header Compression for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs)]

* IETF working groups:
** http://datatracker.ietf.org/wg/6lowpan/documents/[IPv6 over Low power WPAN (6lowpan)]
** http://datatracker.ietf.org/wg/roll/documents/[Routing Over Low power and Lossy networks (roll)]
** http://datatracker.ietf.org/wg/6tisch/documents/[IPv6 over the TSCH mode of IEEE 802.15.4e (6tisch)]
** http://datatracker.ietf.org/wg/6lo/documents/[IPv6 over Networks of Resource-constrained Nodes (6lo)]
** http://datatracker.ietf.org/wg/core/documents/[Constrained RESTful Environments (core)]

* https://www.iana.org/assignments/_6lowpan-parameters/_6lowpan-parameters.xhtml[6LoWPAN IANA assignments]

// vim: set syntax=asciidoc:
